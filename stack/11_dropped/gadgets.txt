[realy0sh1@xps 11_dropped]$ ropper --all --file ./vuln

0x00000000004010a8: adc byte ptr [rax], al; call qword ptr [rip + 0x2f3f]; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401076: adc byte ptr [rdx + 0xc8], bh; xor edi, edi; call 0x1040; xor eax, eax; add rsp, 0x38; ret; 
0x000000000040111e: adc dword ptr [rax], edi; test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x00000000004010ac: adc eax, 0x2f3f; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010dc: adc edi, dword ptr [rax]; test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x000000000040114c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10d0; mov byte ptr [rip + 0x2eb3], 1; pop rbp; ret; 
0x00000000004010b0: add ah, dh; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401064: add bh, al; and al, 0xc; pop rdi; ret; 
0x00000000004010aa: add bh, bh; adc eax, 0x2f3f; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x000000000040100a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004010b8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x00000000004010de: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x0000000000401120: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x00000000004010ba: add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000401176: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010e0: add byte ptr [rax], al; test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x0000000000401122: add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x0000000000401122: add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; ret; 
0x000000000040107a: add byte ptr [rax], al; xor edi, edi; call 0x1040; xor eax, eax; add rsp, 0x38; ret; 
0x00000000004010af: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x000000000040115b: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004010a9: add dil, dil; adc eax, 0x2f3f; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401006: add eax, 0x2fed; test rax, rax; je 0x1012; call rax; 
0x0000000000401006: add eax, 0x2fed; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000401086: add esp, 0x38; ret; 
0x0000000000401013: add esp, 8; ret; 
0x000000000040117d: add esp, 8; ret; 
0x0000000000401085: add rsp, 0x38; ret; 
0x0000000000401012: add rsp, 8; ret; 
0x000000000040117c: add rsp, 8; ret; 
0x0000000000401067: and al, 0xc; pop rdi; ret; 
0x0000000000401066: and al, 0xc; pop rdi; ret; 
0x000000000040107e: call 0x1040; xor eax, eax; add rsp, 0x38; ret; 
0x0000000000401151: call 0x10d0; mov byte ptr [rip + 0x2eb3], 1; pop rbp; ret; 
0x00000000004010ab: call qword ptr [rip + 0x2f3f]; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401010: call rax; 
0x0000000000401010: call rax; add rsp, 8; ret; 
0x0000000000401002: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fed; test rax, rax; je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010db: je 0x10f0; mov eax, 0; test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x00000000004010e5: je 0x10f0; mov edi, 0x404010; jmp rax; 
0x00000000004010e5: je 0x10f0; mov edi, 0x404010; jmp rax; nop; ret; 
0x000000000040111d: je 0x1130; mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x0000000000401127: je 0x1130; mov edi, 0x404010; jmp rax; 
0x0000000000401127: je 0x1130; mov edi, 0x404010; jmp rax; ret; 
0x0000000000401174: jmp 0x1100; add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x00000000004010ec: jmp rax; 
0x000000000040112e: jmp rax; 
0x00000000004010ec: jmp rax; nop; ret; 
0x000000000040112e: jmp rax; ret; 
0x0000000000401156: mov byte ptr [rip + 0x2eb3], 1; pop rbp; ret; 
0x00000000004010dd: mov eax, 0; test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x000000000040111f: mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040114f: mov ebp, esp; call 0x10d0; mov byte ptr [rip + 0x2eb3], 1; pop rbp; ret; 
0x00000000004010e7: mov edi, 0x404010; jmp rax; 
0x0000000000401129: mov edi, 0x404010; jmp rax; 
0x00000000004010e7: mov edi, 0x404010; jmp rax; nop; ret; 
0x0000000000401129: mov edi, 0x404010; jmp rax; ret; 
0x0000000000401077: mov edx, 0xc8; xor edi, edi; call 0x1040; xor eax, eax; add rsp, 0x38; ret; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040114e: mov rbp, rsp; call 0x10d0; mov byte ptr [rip + 0x2eb3], 1; pop rbp; ret; 
0x00000000004010b4: nop dword ptr [rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010bc: nop dword ptr [rax]; ret; 
0x00000000004010b3: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010b2: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401068: or al, 0x5f; ret; 
0x0000000000401003: or byte ptr [rax - 0x75], cl; add eax, 0x2fed; test rax, rax; je 0x1012; call rax; 
0x00000000004010e6: or dword ptr [rdi + 0x404010], edi; jmp rax; 
0x00000000004010e6: or dword ptr [rdi + 0x404010], edi; jmp rax; nop; ret; 
0x000000000040115d: pop rbp; ret; 
0x0000000000401069: pop rdi; ret; 
0x000000000040106b: pop rsi; ret; 
0x000000000040114d: push rbp; mov rbp, rsp; call 0x10d0; mov byte ptr [rip + 0x2eb3], 1; pop rbp; ret; 
0x000000000040100d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401179: sub esp, 8; add rsp, 8; ret; 
0x0000000000401001: sub esp, 8; mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x0000000000401178: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: sub rsp, 8; mov rax, qword ptr [rip + 0x2fed]; test rax, rax; je 0x1012; call rax; 
0x00000000004010b6: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010e3: test eax, eax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x00000000004010e3: test eax, eax; je 0x10f0; mov edi, 0x404010; jmp rax; nop; ret; 
0x0000000000401125: test eax, eax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x0000000000401125: test eax, eax; je 0x1130; mov edi, 0x404010; jmp rax; ret; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010e2: test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; 
0x00000000004010e2: test rax, rax; je 0x10f0; mov edi, 0x404010; jmp rax; nop; ret; 
0x0000000000401124: test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; 
0x0000000000401124: test rax, rax; je 0x1130; mov edi, 0x404010; jmp rax; ret; 
0x0000000000401083: xor eax, eax; add rsp, 0x38; ret; 
0x000000000040107c: xor edi, edi; call 0x1040; xor eax, eax; add rsp, 0x38; ret; 
0x0000000000401173: cli; jmp 0x1100; add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401170: endbr64; jmp 0x1100; add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x00000000004010b1: hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010ef: nop; ret; 
0x00000000004010ee: nop; ret; 
0x000000000040115f: nop; ret; 
0x0000000000401016: ret; 
0x000000000040106a: ret; 
0x000000000040106c: ret; 
0x0000000000401089: ret; 
0x00000000004010c0: ret; 
0x00000000004010f0: ret; 
0x0000000000401130: ret; 
0x000000000040115e: ret; 
0x0000000000401160: ret; 
0x0000000000401180: ret; 

115 gadgets found
